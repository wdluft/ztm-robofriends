{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","App","useState","robotList","setRobotList","searchField","setSearchField","filteredRobots","filter","toLowerCase","includes","useEffect","fetch","then","res","json","users","length","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACvB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACE,6BAAKJ,IACL,4BAAIC,WCKGI,EAVE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BACGA,EAAOC,KAAI,SAAAC,GACV,OAAO,cAAC,EAAD,CAAqBT,GAAIS,EAAMT,GAAIC,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,OAAvDO,EAAMT,UCGjBU,EARG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAClB,OACE,qBAAKR,UAAU,MAAf,SACE,uBAAOS,KAAK,SAASC,YAAY,gBAAgBV,UAAU,mCAAmCW,SAAUH,OCK/FI,G,MARA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,MCqCQK,EAlCH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEsBF,mBAAS,IAF/B,mBAETG,EAFS,KAEIC,EAFJ,KAQVC,EAAiBJ,EAAUK,QAAO,SAAAnB,GAAK,OAAIA,EAAMR,KAAK4B,cAAcC,SAASL,MAWnF,OATAM,qBAAU,WACRC,MAAM,8CAA8CC,MAAK,SAAAC,GACvD,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJZ,EAAaY,QAEd,IAEqB,IAArBb,EAAUc,OACJ,4CAIP,sBAAKlC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,eAtBO,SAAC2B,GACrBZ,EAAeY,EAAEC,OAAOC,UAsBtB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjC,OAAQoB,UCxBXc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3a9e29bb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({id, name, email}) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {robots.map(robot => {\n        return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email}/>\n      })}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({onSearchChange}) => {\n  return (\n    <div className='pa2'>\n      <input type=\"search\" placeholder='search robots' className='pa3 ba b--green bg-lightest-blue' onChange={onSearchChange}/>\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = ({children}) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n      {children}\n    </div>\n  )\n}\n\nexport default Scroll\n","import React, {useState, useEffect} from 'react'\nimport CardList from '../components/CardList'\n// import {robots} from './robots';\nimport SearchBox from '../components/SearchBox'\nimport './App.css'\nimport Scroll from '../components/Scroll'\n\n\nconst App = () => {\n  const [robotList, setRobotList] = useState([]);\n  const [searchField, setSearchField] = useState('');\n\n  const onSearchChange= (e) => {\n    setSearchField(e.target.value);\n  }\n\n  const filteredRobots = robotList.filter(robot => robot.name.toLowerCase().includes(searchField));\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/users`).then(res => {\n      return res.json();\n    })\n    .then(users => {\n      setRobotList(users);\n    });\n  }, []);\n\n  if(robotList.length === 0) {\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <div className='tc'>\n      <h1 className='f1'>RoboFriends</h1>\n      <SearchBox onSearchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots}/>\n      </Scroll>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}